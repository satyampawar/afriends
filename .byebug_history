c
 c
c
@conversation.id
<% end %>
    }
        chatBox.notify();
        chatbox.scrollTop(chatbox[0].scrollHeight);
        chatbox.children().last().removeClass("self").addClass("other");        
        chatBox.chatWith(id);
    if(sender_id != reciever_id){
    chatbox.scrollTop(chatbox[0].scrollHeight);
    chatbox.append("<%= j render( partial: @message ) %>");
    debugger
    var reciever_id = $('meta[name=user-id]').attr("content");
    var sender_id = "<%= @message.user.id %>";
    var chatbox = $("#chatbox_" + id + " .chatboxcontent");
    var id = "<%= @conversation.id %>";
<%= publish_to @path do %>
c
conversation
c
conversation.recipient
conversation.sender
conversation
c
Friendlist
FriendsList
FriendsLiust
FriendList
FriendLists
FriendList
Friendlog.find_by(:user_id => @user1, :friend_id => current_user.id)
Friendlog.where(:user_id => @user1, :friend_id => current_user.id)
Friendlog.where(:user_id => @user1 && :friend_id => current_user.id)
Friendlog.where(:user_id => @user1 && friend_id: current_user.id)
Friendlog.where(:user_id => @user1 && friend_id: current_user)
Friendlog.where(:user_id => @user1)
Friendlog
c
a += u.fullname
a = ""
a += u.fullname
a +=u.fullname
a = []
u.fullname
string
c
User.find(pt.tag_user_id).map(&:fullname)
User.find(pt.tag_user_id).collect{|u| u.fullname}
User.find(pt.tag_user_id)
pt User.find(pt.tag_user_id)
pt
c
User.find(pt.tag_user_id)
User.find(pt.tag_user_id).collect{|u| u.fullname}.to_s
User.find(pt.tag_user_id).collect{|u| u.fullname}.to_S
User.find(pt.tag_user_id).collect{|u| u.fullname}
User.find(pt.tag_user_id).collect{|u| u.fullname.first}
User.find(pt.tag_user_id).collect{|u| u.fullname.to_s}
User.find(pt.tag_user_id).collect{|u| u.fullname}
User.find(pt.tag_user_id)
pt.tag_user_id
c
post.post_event.page_moviec
post.post_event.page_movie
c
post.post_event.page_movie
post.post_event.page_id
post.post_event.page
post.post_event
c
post.post_event.page_movie
post.post_event.page_m
post.post_event
c
Page.find 5
post.post_event
post.post_event.page
post.post_event.page_movies
post.post_event.page_movie
post.post_event.pageMovies
post.post_event.pageMovie
post.post_event.pages
post.post_event.page
post.post_event
post
c
post.post_event
c
post.post_event
c
post.post_event.delete
c
post.post_event.delete
post.post_event
post.post_event.delete
post.post_event
post.post_event.present?
c
post.post_event
c
post.post_event
post
c
x
c
cc
c
@tok_token
@vid.token_base
c
@tok_token
@vid
c
cc
c
session_id
c
session_id.to
session_id.to_
session_id.to_hash
session_id.to_a
session_id.to_h
session_id.to_json
session_id["session_id"]
session_id[:session_id]
session_id
session_id[2..session_id.length].gsub('-', '+').gsub('_', '/')
session_id[2..session_id.length]
session_id
c
cc
c
session.session_id.to_s
@tok_token = @opentok.generate_token :session_id => session.session_id.to_s
 @vid = VideoChat.new(caller_id:current_user.id, receiver_id: params[:id])
@room = User.find(params[:id])
c
decoded
decoded.include? "45756982"
decoded.include? 45756982
decode.api_key? 45756982
decoded = Base64.decode64(edn)
 edn = a[2..a.length].gsub('-', '+').gsub('_', '/')
a =session.session_id
session.session_id
session
decoded.include? "45756982"
decoded.include? 45756982
 decoded = Base64.decode64(edn)
edn = a[2..a.length].gsub('-', '+').gsub('_', '/')
en = a[2..a.length].gsub('-', '+').gsub('_', '/')
en =a[2..a.length].gsub('-', '+').gsub('_', '/')
a[2..a.length].gsub('-', '+').gsub('_', '/')
                          .gsub('_', '/')'
a[2..a.length] .gsub('-', '+')
a  = "2_MX40NTc1Njk4Mn4xMjcuMC4wLjF-MTQ4NjM2MzEyODQxMX4xRDVKSU11dGEzRXVsajBVTTlVakI1WU5-UH4"
a  = 2_MX40NTc1Njk4Mn4xMjcuMC4wLjF-MTQ4NjM2MzEyODQxMX4xRDVKSU11dGEzRXVsajBVTTlVakI1WU5-UH4
@tok_token = @opentok.generate_token :session_id =>session.session_id
  @room = User.find(params[:id])
@opentok.create_session :location => request.remote_addr, :output_mode => :individual
@opentok.save
@opentok
session
Session.all
Session
c
@opentok
c
session
c
params
c
session
params
c
PageMovie.find(5)
PageMovie(5)
Page.find(5).page_movie
Page.find(5).eval('movi')
Page.find(5)
 emotion = params[:emo_id]
c
params
c
params
c
image_tag(result.page_movie.poster_url)
c
current_user.pages.collect{|p| {id: p.page_movie.id, image_url: p.page_movie.poster_url, title: p.page_movie.title}}
c
current_user.pages.collect{|p| {id: p.page_movie.id, image_url: p.page_movie.poster_url, title: p.page_movie.title}}
c
PageMoviec
PageMovie
p.page_movie
current_user.pages.collect{|p| {id: p.page_movie.id, image_url: p.page_movie.image_url, title: p.page_movie.title}}
c
current_user.pages.collect{|p| p.page_movie}.to_json
current_user.pages.to_json
c
emotion
c
params
c
params[:set_director]
params[:set_director].to_s
params[:set_director]
params[:set_vote]
params[:set_votes]
params
c
params[:set_plot_summary]
params[set_plot_summary]
params
c
params
prams
c
params
c
params
c
params
c
params[:page_type]
params
c
params
c
params
page_type = params[:page_type]
c
params[:page_type]
c
results.movies[0].thumb
results.movies[0].thum
results.movies[0].thumbnail
results.movies[0].image
results.movies[0].image_url
results.movies[0].title
results.movies[0].name
results.movies[0]
results.movies
data
f.filmography
f.description
f.images
f.image
results
results["names"]
results[:names]
results.names
f.url
f.thumbnail
