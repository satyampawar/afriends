c
PageMovie.find(5)
PageMovie(5)
Page.find(5).page_movie
Page.find(5).eval('movi')
Page.find(5)
 emotion = params[:emo_id]
c
params
c
params
c
image_tag(result.page_movie.poster_url)
c
current_user.pages.collect{|p| {id: p.page_movie.id, image_url: p.page_movie.poster_url, title: p.page_movie.title}}
c
current_user.pages.collect{|p| {id: p.page_movie.id, image_url: p.page_movie.poster_url, title: p.page_movie.title}}
c
PageMoviec
PageMovie
p.page_movie
current_user.pages.collect{|p| {id: p.page_movie.id, image_url: p.page_movie.image_url, title: p.page_movie.title}}
c
current_user.pages.collect{|p| p.page_movie}.to_json
current_user.pages.to_json
c
emotion
c
params
c
params[:set_director]
params[:set_director].to_s
params[:set_director]
params[:set_vote]
params[:set_votes]
params
c
params[:set_plot_summary]
params[set_plot_summary]
params
c
params
prams
c
params
c
params
c
params
c
params[:page_type]
params
c
params
c
params
page_type = params[:page_type]
c
params[:page_type]
c
results.movies[0].thumb
results.movies[0].thum
results.movies[0].thumbnail
results.movies[0].image
results.movies[0].image_url
results.movies[0].title
results.movies[0].name
results.movies[0]
results.movies
data
f.filmography
f.description
f.images
f.image
results
results["names"]
results[:names]
results.names
f.url
f.thumbnail
f.poster
f.actors
f.title
f.response
f.Response
afs.writer
afs.actors
afs.actor
afs = f
f
f.actor
f.actors
f.Actors
f.writer
f.Writer
f.stars
f.star
f.stars
f.writer
f.director
f.writer_name
f.writer
f.Writer
f.writter
f.writer
f.writter
af = f
afs
f
f.lang_name
f.lang
f.language
f.duration_time
f.durations
f.duration
f.time
f.run_time
f.runtime
f.genre
f.genre_name
f.genre
f.release_date
f.release
f.released
f.Released
f.realed
f.votes
f.rating
f.Rating
f.imdbRating
f.year
f.director
f.Director
f.y
f.attributes
f.document
f.title
f.director-info
afa
afa=f
f[0]
f.first
f.fisrt
f
f[a]
f.credit_summary_item
f.slate
f.poster
f.video
f.video-modal
f.plot_summary 
f.description
f.summary
f.su,,ary
f.title
f
results.plot_summary
results.plot_summary 
results.description
results.summary
results.director
results
JSON.parse( response.body)
 response.body
 response.body.split.collect{|b| b.include?('downArrow') ? b : nil}.compact
 response.body.split
 response.body.split.collect{|b| b.include?('plot_summary') ? b : nil}.compact
c
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\"","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\" ","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\ ","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("/\/","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("/\","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\/\","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\/\\","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\\","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.gsub("\","")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.remove("\")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.chomp
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=\").second.to_s
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second.to_s
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").second
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split("=").first
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split(" = ").first
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.split(" = ")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first.slice(" = ")
response.body.split.collect{|a| a.include?('data-video') ?a:nil}.compact.first
response.body.split.collect{|a| a.include?('video') :a }.compact.first
response.body.split.collect{|a| a.include?('data-video')}.compact.first
response.body.split.collect{|a| a.include?('data-video')}.compact
response.body.split.collect{|a| a.include?('data-video')}
response.body.split.collect{|a| a.include?('data-video') ? a.include?('amazon') ? a: nil : nil}.compact.first
response.body.split.include?("data-video")
response.body.split.include("data-video")
response.body.split
response.body.to_a
JSON.parse(response.body).to_a
JSON.parse(response.body).split()
JSON.parse(response.body).split
JSON.parse(response.body)[0]
JSON.parse(response.body)["data-video"]
JSON.parse(response.body)
response.body.include?('data-video') 
response.body.include('data-video') 
response.body.find('data-video') 
(response.body).collect{|a| a.include?('data-video') ? a: nil }
response.body.include?('data-video') 
response.body.include?('data-video') ? a: nil 
response.body.include?('data-video') ? a: nil }
URI.extract(response.body).collect{|a| a.include?('data-video') ? a: nil }
URI.extract(response.body).collect{|a| a.include?('data-video') ? a.include?('') ? a: nil : nil}
URI.extract(response.body).collect{|a| a.include?('data-video') ? a.include?('imdb') ? a: nil : nil}
response.body
URI.extract(response.body).collect{|a| a.include?('') ? a.include?('imdb') ? a: nil : nil}.compact.first
URI
URI.extract(response.body).collect{|a| a.include?('') ? a.include?('imdb') ? a: nil : nil}.compact.first
URI.extract(response.body)
URI.extract(response.body).collect{|a| a.include?('') ? a.include?('imdb') ? a: nil : nil}.compact.first
URI.extract(response.body).collect{|a| a.include?('video') ? a.include?('imdb') ? a: nil : nil}.compact.first
URI.extract(response.body).collect{|a| a}
